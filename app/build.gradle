apply plugin: 'com.android.application'
apply plugin: 'android-apt'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "org.give2peer.karma"
        minSdkVersion 10
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "cucumber.api.android.CucumberInstrumentation"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // This solves (stale?) httpclient packaged with Android creating conflicts
    // I still have a warning that one of the two is ignored, and jarjar blinks:
    // WARNING: Dependency org.apache.httpcomponents:httpclient:4.3 is ignored for debug
    //          as it may be conflicting with the internal version provided by Android.
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'LICENSE.txt'
    }

}

// Android Annotations needs this
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.0.0'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    // BACKWARDS COMPATIBILITY
    compile 'com.android.support:appcompat-v7:22.1.1'
    compile 'com.github.machinarius:preferencefragment:0.1.1'
    // MAPS GOOGLE API
    compile 'com.google.android.gms:play-services-maps:8.4.0'
    // LOCATION GOOGLE API
    compile 'com.google.android.gms:play-services-location:8.4.0'
    // FAB : Floating Action Button
    //compile 'com.android.support:design:23.3.0' // nope
    compile 'com.shamanland:fab:0.0.8'
    // HTTP
    compile 'org.apache.httpcomponents:httpmime:4.3'
    compile 'org.apache.httpcomponents:httpclient-android:4.3.5'
    // ORM
//    compile 'com.github.satyan:sugar:1.5'
    // ... but it is buggy with gradle 2.x, so we need the master branch
    compile 'com.github.satyan:sugar:master-SNAPSHOT'

    // SWEET SUGAR FOR HUMAN TIMES ("2 days ago")
    compile 'org.ocpsoft.prettytime:prettytime:3.2.7.Final'
    // JODA TIME (parse Dates from JSON)
    compile 'net.danlew:android.joda:2.8.1'
    // GSON (JSON conversion made somewhat easy)
    compile 'com.google.code.gson:gson:2.4'
    // IMAGE CACHE (pretty awesome)
    compile 'pl.polidea:android-image-cache-library:2.0'
    // ANDROID ANNOTATIONS
    apt     'org.androidannotations:androidannotations:3.3.2'
    compile 'org.androidannotations:androidannotations-api:3.3.2'
    // Capitalize
    compile "org.apache.commons:commons-lang3:3.4"
    // FONT ICONS (clever, in case images become not enough)
    // http://zavoloklom.github.io/material-design-iconic-font/icons.html
    //compile 'com.malinskiy:materialicons:1.0.1'
    // LEGACY
    //compile 'com.squareup.retrofit:retrofit:1.6.0'

    // FEATURES-TESTING
    androidTestCompile 'info.cukes:cucumber-core:1.2.2'
    androidTestCompile 'info.cukes:cucumber-java:1.2.2'
    androidTestCompile 'info.cukes:cucumber-android:1.2.2@jar'
    androidTestCompile 'com.jayway.android.robotium:robotium-solo:5.2.1'
    // SOME OTHER TEST LIBS we don't need right now (but might later on)
    //androidTestCompile 'info.cukes:cucumber-junit:1.2.2'
    //androidTestCompile 'info.cukes:gherkin:2.12.2'
    // UNIT-TESTING
    testCompile        'org.testng:testng:6.9.6'
    androidTestCompile 'junit:junit:4.12'
    // TRUTH looks nice, but we have enough assertions for our uses
    //androidTestCompile 'com.google.truth:truth:0.26'
}

apt {
    arguments {
        androidManifestFile variant.outputs[0].processResources.manifestFile
        // if you have multiple outputs (when using splits), you may want to have other index than 0

        // you should set your package name here if you are using different application IDs
        // resourcePackageName "your.package.name"

        // You can set optional annotation processing options here, like these commented options:
        // logLevel 'INFO'
        // logFile '/var/log/aa.log'
    }
}
